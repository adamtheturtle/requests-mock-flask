[MASTER]

# Specify a configuration file.
#rcfile=

# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
#init-hook=

# Add files or directories to the blacklist. They should be base names, not
# paths.
ignore=CVS,

# Add files or directories matching the regex patterns to the blacklist. The
# regex matches against base names, not paths.
ignore-patterns=

# Pickle collected data for later comparisons.
persistent=yes

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=
    pylint.extensions.docparams,

# Use multiple processes to speed up Pylint.
jobs=1

# Allow loading of arbitrary C extensions. Extensions are imported into the
# active Python interpreter and may run arbitrary code.
unsafe-load-any-extension=no

# A comma-separated list of package or module names from where C extensions may
# be loaded. Extensions are loading into the active Python interpreter and may
# run arbitrary code
extension-pkg-whitelist=

# Allow optimization of some AST trees. This will activate a peephole AST
# optimizer, which will apply various small optimizations. For instance, it can
# be used to obtain the result of joining multiple strings with the addition
# operator. Joining a lot of strings can lead to a maximum recursion error in
# Pylint and this flag can prevent that. It has one side effect, the resulting
# AST will be different than the one from reality. This option is deprecated
# and it will be removed in Pylint 2.0.
optimize-ast=no


[MESSAGES CONTROL]

# Only show warnings with the listed confidence levels. Leave empty to show
# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED
confidence=

# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time (only on the command line, not in the configuration file where
# it should appear only once). See also the "--disable" option for examples.
enable=
    spelling,
    useless-suppression,

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once).You can also use "--disable=all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use"--disable=all --enable=classes
# --disable=W"

disable=
    no-self-use,
    line-too-long,
    too-few-public-methods,
    too-many-lines,
    too-many-locals,
    too-many-arguments,
    too-many-instance-attributes,
    too-many-return-statements,
    too-many-statements,
    locally-disabled,
    # Let flake8 handle unused imports
    unused-import,
    # This creates errors with typing.py
    # see https://github.com/PyCQA/pylint/issues/1212
    invalid-sequence-index,
    # Let isort deal with sorting
    ungrouped-imports,
    # We don't need everything to be documented because of mypy
    missing-type-doc,
    missing-returns-doc,
    missing-return-type-doc,
    # Let YAPF deal with this
    bad-continuation,
    # Let YAPF deal with this
    bad-whitespace,
    # Too difficult to please
    duplicate-code,
    # Let isort handle imports
    wrong-import-order,

[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html. You can also give a reporter class, eg
# mypackage.mymodule.MyReporterClass.
output-format=text

# Put messages in a separate file for each module / package specified on the
# command line instead of printing them on stdout. Reports (if any) will be
# written in a file name "pylint_global.[txt|html]". This option is deprecated
# and it will be removed in Pylint 2.0.
files-output=no

# Tells whether to display a full report or only the messages
reports=no

# Python expression which should return a note less than 10 (10 is the highest
# note). You have access to the variables errors warning, statement which
# respectively contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (RP0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Template used to display messages. This is a python new-style format string
# used to format the message information. See doc for all details
#msg-template=


[BASIC]

# Good variable names which should always be accepted, separated by a comma
good-names=i,j,k,ex,Run,_

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# Colon-delimited sets of names that determine each other's naming style when
# the name regexes allow several styles.
name-group=

# Include a hint for the correct naming format with invalid-name
include-naming-hint=no

# List of decorators that produce properties, such as abc.abstractproperty. Add
# to this list to register other decorators that produce valid properties.
property-classes=abc.abstractproperty

# Regular expression matching correct constant names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Naming hint for constant names
const-name-hint=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{2,40}$

# Naming hint for method names
method-name-hint=[a-z_][a-z0-9_]{2,40}$

# Regular expression matching correct inline iteration names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Naming hint for inline iteration names
inlinevar-name-hint=[A-Za-z_][A-Za-z0-9_]*$

# Regular expression matching correct function names
function-rgx=[a-z_][a-z0-9_]{2,50}$

# Naming hint for function names
function-name-hint=[a-z_][a-z0-9_]{2,50}$

# Regular expression matching correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,50}$

# Naming hint for variable names
variable-name-hint=[a-z_][a-z0-9_]{2,50}$

# Regular expression matching correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Naming hint for module names
module-name-hint=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression matching correct class attribute names
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,50}|(__.*__))$

# Naming hint for class attribute names
class-attribute-name-hint=([A-Za-z_][A-Za-z0-9_]{2,50}|(__.*__))$

# Regular expression matching correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,50}$

# Naming hint for argument names
argument-name-hint=[a-z_][a-z0-9_]{2,50}$

# Regular expression matching correct attribute names
attr-rgx=[a-z_][a-z0-9_]{2,50}$

# Naming hint for attribute names
attr-name-hint=[a-z_][a-z0-9_]{2,50}$

# Regular expression matching correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Naming hint for class names
class-name-hint=[A-Z_][a-zA-Z0-9]+$

# Regular expression which should only match function or class names that do
# not require a docstring.
no-docstring-rgx=^_

# Minimum line length for functions/classes that require docstrings, shorter
# ones are exempt.
docstring-min-length=-1


[ELIF]

# Maximum number of nested blocks for function / method body
max-nested-blocks=5


[FORMAT]

# Maximum number of characters on a single line.
max-line-length=100

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=^\s*(# )?<?https?://\S+>?$

# Allow the body of an if to be on the same line as the test if there is no
# else.
single-line-if-stmt=no

# List of optional constructs for which whitespace checking is disabled. `dict-
# separator` is used to allow tabulation in dicts, etc.: {1  : 1,\n222: 2}.
# `trailing-comma` allows a space between comma and closing bracket: (a, ).
# `empty-line` allows space-only lines.
no-space-check=trailing-comma,dict-separator

# Maximum number of lines in a module
max-module-lines=1000

# String used as indentation unit. This is usually "    " (4 spaces) or "\t" (1
# tab).
indent-string='    '

# Number of spaces of indent required inside a hanging  or continued line.
indent-after-paren=4

# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.
expected-line-ending-format=


[LOGGING]

# Logging modules to check that the string format arguments are in logging
# function parameter format
logging-modules=logging


[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO


[SIMILARITIES]

# Minimum lines number of a similarity.
min-similarity-lines=4

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes

# Ignore imports when computing similarities.
ignore-imports=no


[SPELLING]

# Spelling dictionary name. Available dictionaries: none. To make it working
# install python-enchant package.
spelling-dict=en_US

# List of comma separated words that should not be checked.
spelling-ignore-words=

# A path to a file that contains private dictionary; one word per line.
spelling-private-dict-file=spelling_private_dict.txt

# Tells whether to store unknown words to indicated private dictionary in
# --spelling-private-dict-file option instead of raising a message.
spelling-store-unknown-words=no


[TYPECHECK]

# Tells whether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# List of module names for which member attributes should not be checked
# (useful for modules/projects where namespaces are manipulated during runtime
# and thus existing member attributes cannot be deduced by static analysis. It
# supports qualified module names, as well as Unix pattern matching.
ignored-modules=

# List of class names for which member attributes should not be checked (useful
# for classes with dynamically set attributes). This supports the use of
# qualified names.
ignored-classes=optparse.Values,thread._local,_thread._local

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E1101 when accessed. Python regular
# expressions are accepted.
generated-members=
# We want to work around https://github.com/PyCQA/pylint/issues/1411 and
# https://github.com/requests/requests/issues/2417.
#
# We therefore ignore all `requests.codes` patterns.
# This was created with the following Python script.

#import string
#
#import requests
#
#pattern = '(requests\.)?codes\.({allowed}),'
#accepted_characters = set(string.ascii_letters + '_')
#keys = [key for key in requests.codes.__dict__.keys() if set(key).issubset(accepted_characters)]
#print(pattern.format(allowed='|'.join(keys)))

    (requests\.)?codes\.(name|continue|CONTINUE|switching_protocols|SWITCHING_PROTOCOLS|processing|PROCESSING|checkpoint|CHECKPOINT|uri_too_long|URI_TOO_LONG|request_uri_too_long|REQUEST_URI_TOO_LONG|ok|OK|okay|OKAY|all_ok|ALL_OK|all_okay|ALL_OKAY|all_good|ALL_GOOD|created|CREATED|accepted|ACCEPTED|non_authoritative_info|NON_AUTHORITATIVE_INFO|non_authoritative_information|NON_AUTHORITATIVE_INFORMATION|no_content|NO_CONTENT|reset_content|RESET_CONTENT|reset|RESET|partial_content|PARTIAL_CONTENT|partial|PARTIAL|multi_status|MULTI_STATUS|multiple_status|MULTIPLE_STATUS|multi_stati|MULTI_STATI|multiple_stati|MULTIPLE_STATI|already_reported|ALREADY_REPORTED|im_used|IM_USED|multiple_choices|MULTIPLE_CHOICES|moved_permanently|MOVED_PERMANENTLY|moved|MOVED|found|FOUND|see_other|SEE_OTHER|other|OTHER|not_modified|NOT_MODIFIED|use_proxy|USE_PROXY|switch_proxy|SWITCH_PROXY|temporary_redirect|TEMPORARY_REDIRECT|temporary_moved|TEMPORARY_MOVED|temporary|TEMPORARY|permanent_redirect|PERMANENT_REDIRECT|resume_incomplete|RESUME_INCOMPLETE|resume|RESUME|bad_request|BAD_REQUEST|bad|BAD|unauthorized|UNAUTHORIZED|payment_required|PAYMENT_REQUIRED|payment|PAYMENT|forbidden|FORBIDDEN|not_found|NOT_FOUND|method_not_allowed|METHOD_NOT_ALLOWED|not_allowed|NOT_ALLOWED|not_acceptable|NOT_ACCEPTABLE|proxy_authentication_required|PROXY_AUTHENTICATION_REQUIRED|proxy_auth|PROXY_AUTH|proxy_authentication|PROXY_AUTHENTICATION|request_timeout|REQUEST_TIMEOUT|timeout|TIMEOUT|conflict|CONFLICT|gone|GONE|length_required|LENGTH_REQUIRED|precondition_failed|PRECONDITION_FAILED|precondition|PRECONDITION|request_entity_too_large|REQUEST_ENTITY_TOO_LARGE|request_uri_too_large|REQUEST_URI_TOO_LARGE|unsupported_media_type|UNSUPPORTED_MEDIA_TYPE|unsupported_media|UNSUPPORTED_MEDIA|media_type|MEDIA_TYPE|requested_range_not_satisfiable|REQUESTED_RANGE_NOT_SATISFIABLE|requested_range|REQUESTED_RANGE|range_not_satisfiable|RANGE_NOT_SATISFIABLE|expectation_failed|EXPECTATION_FAILED|im_a_teapot|IM_A_TEAPOT|teapot|TEAPOT|i_am_a_teapot|I_AM_A_TEAPOT|misdirected_request|MISDIRECTED_REQUEST|unprocessable_entity|UNPROCESSABLE_ENTITY|unprocessable|UNPROCESSABLE|locked|LOCKED|failed_dependency|FAILED_DEPENDENCY|dependency|DEPENDENCY|unordered_collection|UNORDERED_COLLECTION|unordered|UNORDERED|upgrade_required|UPGRADE_REQUIRED|upgrade|UPGRADE|precondition_required|PRECONDITION_REQUIRED|too_many_requests|TOO_MANY_REQUESTS|too_many|TOO_MANY|header_fields_too_large|HEADER_FIELDS_TOO_LARGE|fields_too_large|FIELDS_TOO_LARGE|no_response|NO_RESPONSE|none|NONE|retry_with|RETRY_WITH|retry|RETRY|blocked_by_windows_parental_controls|BLOCKED_BY_WINDOWS_PARENTAL_CONTROLS|parental_controls|PARENTAL_CONTROLS|unavailable_for_legal_reasons|UNAVAILABLE_FOR_LEGAL_REASONS|legal_reasons|LEGAL_REASONS|client_closed_request|CLIENT_CLOSED_REQUEST|internal_server_error|INTERNAL_SERVER_ERROR|server_error|SERVER_ERROR|not_implemented|NOT_IMPLEMENTED|bad_gateway|BAD_GATEWAY|service_unavailable|SERVICE_UNAVAILABLE|unavailable|UNAVAILABLE|gateway_timeout|GATEWAY_TIMEOUT|http_version_not_supported|HTTP_VERSION_NOT_SUPPORTED|http_version|HTTP_VERSION|variant_also_negotiates|VARIANT_ALSO_NEGOTIATES|insufficient_storage|INSUFFICIENT_STORAGE|bandwidth_limit_exceeded|BANDWIDTH_LIMIT_EXCEEDED|bandwidth|BANDWIDTH|not_extended|NOT_EXTENDED|network_authentication_required|NETWORK_AUTHENTICATION_REQUIRED|network_auth|NETWORK_AUTH|network_authentication|NETWORK_AUTHENTICATION),

# List of decorators that produce context managers, such as
# contextlib.contextmanager. Add to this list to register other decorators that
# produce valid context managers.
contextmanager-decorators=contextlib.contextmanager


[VARIABLES]

# Tells whether we should check for unused import in __init__ files.
init-import=no

# A regular expression matching the name of dummy variables (i.e. expectedly
# not used).
dummy-variables-rgx=(_+[a-zA-Z0-9]*?$)|dummy

# List of additional names supposed to be defined in builtins. Remember that
# you should avoid to define new builtins when possible.
additional-builtins=

# List of strings which can identify a callback function by name. A callback
# name must start or end with one of those strings.
callbacks=cb_,_cb

# List of qualified module names which can have objects that can redefine
# builtins.
redefining-builtins-modules=six.moves,future.builtins


[CLASSES]

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method.
valid-metaclass-classmethod-first-arg=mcs

# List of member names, which should be excluded from the protected access
# warning.
exclude-protected=_asdict,_fields,_replace,_source,_make


[DESIGN]

# Maximum number of arguments for function / method
max-args=5

# Argument names that match this expression will be ignored. Default to name
# with leading underscore
ignored-argument-names=_.*

# Maximum number of locals for function / method body
max-locals=15

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of branch for function / method body
max-branches=50

# Maximum number of statements in function / method body
max-statements=50

# Maximum number of parents for a class (see R0901).
max-parents=7

# Maximum number of attributes for a class (see R0902).
max-attributes=7

# Minimum number of public methods for a class (see R0903).
min-public-methods=2

# Maximum number of public methods for a class (see R0904).
max-public-methods=20

# Maximum number of boolean expressions in a if statement
max-bool-expr=5


[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=optparse

# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report RP0402 must not be disabled)
import-graph=

# Create a graph of external dependencies in the given file (report RP0402 must
# not be disabled)
ext-import-graph=

# Create a graph of internal dependencies in the given file (report RP0402 must
# not be disabled)
int-import-graph=

# Force import order to recognize a module as part of the standard
# compatibility libraries.
known-standard-library=

# Force import order to recognize a module as part of a third party library.
known-third-party=enchant

# Analyse import fallback blocks. This can be used to support both Python 2 and
# 3 compatible code, which means that the block might have code that exists
# only in one or another interpreter, leading to false positives when analysed.
analyse-fallback-blocks=no


[EXCEPTIONS]

# Exceptions that will emit a warning when being caught. Defaults to
# "Exception"
overgeneral-exceptions=Exception
